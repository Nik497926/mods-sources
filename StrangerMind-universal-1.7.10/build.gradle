buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    flatDir {
        dirs 'lib'
    }
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
}

apply plugin: 'forge'
compileJava.options.encoding = 'UTF-8'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

version = "1.41"
group= "ru.msgaming.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "DwarvenCity-universal"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

dependencies {
  //compile name: 'jarname'
    compile name: 'BrandonsCore-1.0.0.12-dev'
    compile name: 'Draconic-Evolution-1.7.10-1.0.2h-dev'
    compile name: 'Baubles-1.7.10-1.0.1.10-dev'
    compile name: 'CosmeticArmorReworked-1.7.10-v6b'
    compile name: 'creativecore-v1.3.24-mc1.7.10'
    compile name: 'bukkit-1.7.10'
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.4.29:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.3.75:dev"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
