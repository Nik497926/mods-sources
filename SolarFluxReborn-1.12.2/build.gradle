buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
		maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.1.0'
	id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '1.56'
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "12.4.11"
group = "tk.zeitheron.solarflux"
archivesBaseName = "SolarFluxReborn-1.12"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    mappings = "stable_39"
    makeObfSourceJar = false
    replace '@VERSION@', "12.4.11"
	replace '@FINGERPRINT@', project.findProperty('signSHA1')
}

repositories {
	mavenCentral()
    maven {
        name = "thiakil"
        url = "http://maven.thiakil.com"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "jei"
        url =  "http://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
	deobfCompile "black-hole-storage:BlackHoleStorage_1.12.2:30a:deobf"
    runtime "mezz.jei:jei_1.12.2:4.11.0.206"
	deobfCompile "com.azanor.baubles:Baubles:1.12-1.5.2"
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", '1.12.2'
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		include 'pack.mcmeta'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
		exclude 'pack.mcmeta'
    }
	rename "mod_id_at.cfg", "META-INF/solarflux_at.cfg"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest {
        attributes 'FMLAT': "solarflux_at.cfg"
    }
}

task srcJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
	manifest {
        attributes 'FMLAT': "solarflux_at.cfg"
    }
}

jar {
	manifest {
		attributes 'FMLAT': "solarflux_at.cfg"
	}
}

artifacts {
    archives deobfJar
	archives srcJar
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        System.env.MC_KS_PASS != null
    }
    keyStore = System.env.MC_KS_PATH
    alias = System.env.MC_KS_ALIAS
    storePass = System.env.MC_KS_PASS
    keyPass = System.env.MC_KS_PASS
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

task signDeobfJar(type: SignJar, dependsOn: deobfJar) {
    onlyIf {
        System.env.MC_KS_PASS != null
    }
    keyStore = System.env.MC_KS_PATH
    alias = System.env.MC_KS_ALIAS
    storePass = System.env.MC_KS_PASS
    keyPass = System.env.MC_KS_PASS
    inputFile = deobfJar.archivePath
    outputFile = deobfJar.archivePath
}

task signSrcJar(type: SignJar, dependsOn: srcJar) {
    onlyIf {
        System.env.MC_KS_PASS != null
    }
    keyStore = System.env.MC_KS_PATH
    alias = System.env.MC_KS_ALIAS
    storePass = System.env.MC_KS_PASS
    keyPass = System.env.MC_KS_PASS
    inputFile = srcJar.archivePath
    outputFile = srcJar.archivePath
}

build.dependsOn signJar
build.dependsOn signDeobfJar
build.dependsOn signSrcJar
